services:
  kong:
    image: kong:3.5
    user: root
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_LOG_LEVEL: debug
    ports:
      - "8000:8000"
      - "8443:8443"
    volumes:
      - ./config/kong/declarative:/usr/local/kong/declarative:ro
    networks:
      - dive25-net

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME=localhost
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - dive25-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/dive25
      - REDIS_HOST=redis
      - OPA_URL=http://opa:8181
      - KEYCLOAK_URL=http://keycloak:8080
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
      - opa
      - keycloak
    networks:
      - dive25-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    depends_on:
      - api
    networks:
      - dive25-net

  mongodb:
    image: mongo:5
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - dive25-net

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - dive25-net

  opa:
    image: openpolicyagent/opa:latest
    ports:
      - "8181:8181"
    command:
      - "run"
      - "--server"
      - "--addr=:8181"
    volumes:
      - ./policies:/policies
    networks:
      - dive25-net

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dive25-net

# Update docker-compose.yml to add monitoring services
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - dive25-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    networks:
      - dive25-net

  openldap:
    image: osixia/openldap:1.5.0
    environment:
      LDAP_ORGANISATION: "DIVE25"
      LDAP_DOMAIN: "dive25.local"
      LDAP_BASE_DN: "dc=dive25,dc=local"
      LDAP_ADMIN_PASSWORD: "${LDAP_ADMIN_PASSWORD}"
      LDAP_CONFIG_PASSWORD: "${LDAP_CONFIG_PASSWORD}"
      LDAP_READONLY_USER: "true"
      LDAP_READONLY_USER_USERNAME: "readonly"
      LDAP_READONLY_USER_PASSWORD: "${LDAP_READONLY_PASSWORD}"
      LDAP_TLS: "false"
    volumes:
      - ./config/openldap/schema:/bootstrap/schema
      - ./config/openldap/ldif:/bootstrap/ldif
      - openldap_data:/var/lib/ldap
      - openldap_config:/etc/ldap/slapd.d
    command: --copy-service
    networks:
      - dive25-net

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8444:443"
    depends_on:
      - openldap
    networks:
      - dive25-net

  ldap-exporter:
    build:
      context: ./monitoring/ldap-exporter
      dockerfile: Dockerfile
    environment:
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
    ports:
      - "9330:9330"
    depends_on:
      - openldap
    networks:
      - dive25-net

networks:
  dive25-net:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  openldap_data:
  openldap_config: