#!/bin/bash
# deploy.sh

# Exit on error
set -e

# Load environment variables
source .env.production

# Function to generate a random alphanumeric string (no special characters)
generate_random_string() {
  local length=${1:-12}
  tr -dc 'A-Za-z0-9' </dev/urandom | head -c "$length"
}

# Autogenerate required environment variables if they are unset or empty
for VAR in MONGO_ROOT_USER MONGO_ROOT_PASSWORD KEYCLOAK_ADMIN_PASSWORD KEYCLOAK_DB_PASSWORD GRAFANA_ADMIN_PASSWORD; do
  if [ -z "${!VAR}" ]; then
    export $VAR=$(generate_random_string 12)
    echo "Autogenerated $VAR"
  fi
done

# Check required tools
command -v docker >/dev/null 2>&1 || { echo "Docker is required but not installed. Aborting." >&2; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo "Docker Compose is required but not installed. Aborting." >&2; exit 1; }

# Bring down existing services
docker-compose down

# Pull latest images
docker-compose pull

# Build services
docker-compose build

# Start services in order
docker-compose up -d mongodb redis postgres
sleep 10  # Wait for databases to initialize

docker-compose up -d keycloak
sleep 10  # Wait for Keycloak to initialize

docker-compose up -d opa kong
sleep 5   # Wait for infrastructure services

docker-compose up -d api frontend

# Health check
echo "Performing health checks..."
curl -f http://localhost:3000/health || { echo "API health check failed"; exit 1; }
curl -f http://localhost:8080/health || { echo "Keycloak health check failed"; exit 1; }

echo "Deployment completed successfully"